// DO NOT EDIT THIS FILE.
// This file is part of the Jax Framework.
// If you edit this file, your changes will be lost when framework updates are applied.

// Copyright (c) 2010-2014 Ronald B. Cemer
// All rights reserved.
// This software is released under the BSD license.
// Please see the accompanying LICENSE.txt for details.

var lastParsedFieldErrors = {};

function parseMsgsFromJSON(json) {
	clearMsgs();

	var tabIdsSoFar = [];

	var msgs = JSON.parse(json);

	var anyFieldErrors = false;
	var orphanedFieldErrors = '';
	if (typeof(msgs.fieldErrors) == 'object') {
		lastParsedFieldErrors = msgs.fieldErrors;
		for (var fieldName in msgs.fieldErrors) {
			var elem = $('#fieldErrorMsg_'+fieldName);
			if (elem.length > 0) {
				anyFieldErrors = true;
				var html = msgs.fieldErrors[fieldName].replace(/\r\n|\r|\n/g, '<br/>');
				elem.html(html);
				// If the element is missing some classes, fix that.
				if (!elem.hasClass('fieldErrorMsg')) elem.addClass('fieldErrorMsg');
				if (!elem.hasClass('text-error')) elem.addClass('text-error');
				if (html != '') {
					// Traverse upward, looking for an element which has the bootstrap
					// "form-group" class.  If found, add the error class to that element.
					var parent = elem.parent();
					while (parent.length > 0) {
						if (parent.hasClass('form-group')) {
							parent.addClass('has-error');
							break;
						}
						parent = parent.parent();
					}

					// Traverse upward, looking for a tab-pane container.  If we find it,
					// look for its tab, and add an icon to the tab so the user can
					// more easily find the tabs which have errors.
					var parent = elem.parent();
					while (parent.length > 0) {
						if (parent.hasClass('tab-pane')) {
							var id = parent.attr('id');
							if (typeof(id) !== 'undefined') {
								if (tabIdsSoFar.indexOf(id) < 0) {
									tabIdsSoFar.push(id);
									$("div.tabbable li a[href='#"+id+"']").addClass('has-errors').append($('<i class="glyphicon glyphicon-exclamation-sign"/>'));
								}
							}
						}
						parent = parent.parent();
					}

					// Traverse upward, looking for an accordion-body container.  If we find it,
					// look for its accordion-heading, and add an icon to the tab so the user
					// can more easily find the accordion groups which have errors.
					var parent = elem.parent();
					while (parent.length > 0) {
						if (parent.hasClass('accordion-body')) {
							var id = parent.attr('id');
							if (typeof(id) !== 'undefined') {
								if (tabIdsSoFar.indexOf(id) < 0) {
									tabIdsSoFar.push(id);
									$("div.accordion-heading a[href='#"+id+"']").addClass('has-errors').append($('<i class="glyphicon glyphicon-exclamation-sign"/>'));
								}
							}
						}
						parent = parent.parent();
					}

					// Show the error message.
					elem.show();
				}
			} else {
				var tmpmsgs = msgs.fieldErrors[fieldName].split(/\r\n|\r|\n/);
				for (var i = 0; i < tmpmsgs.length; i++) {
					if (tmpmsgs[i].length == 0) continue;
					orphanedFieldErrors += tmpmsgs[i]+' ('+fieldName+')';
					if (orphanedFieldErrors.charAt(orphanedFieldErrors.length-1) != '\n') {
						orphanedFieldErrors += '\n';
					}
				}
			}
		}
	}
	var fieldErrorNotification = anyFieldErrors ?
		"One or more fields have validation errors.  Please check the form.\n" : '';

	var elem = $('#errorMsg');
	var html = (fieldErrorNotification+msgs.errorMsg+orphanedFieldErrors).replace(/\r\n|\r|\n/g, '<br/>');
	if (html != '') html = '<i class="glyphicon glyphicon-exclamation-sign"/>'+html;
	elem.html(html);
	if (html != '') elem.show();

	var elem = $('#successMsg');
	elem.html(msgs.successMsg.replace(/\r\n|\r|\n/g, '<br/>'));
	if (elem.html() != '') elem.show();
}

function clearMsgs() {
	lastParsedFieldErrors = {};
	$('.form-group').removeClass('has-error');
	$('#errorMsg').text('').hide();
	$('#successMsg').text('').hide();
	$('.fieldErrorMsg').text('').removeClass('help-block help-inline').hide();
	$("div.tabbable li a.has-errors i[class='glyphicon glyphicon-exclamation-sign']").remove();
	$("div.tabbable li a.has-errors").removeClass('has-errors');
	$("div.accordion-heading a.has-errors i[class='glyphicon glyphicon-exclamation-sign']").remove();
	$("div.accordion-heading a.has-errors").removeClass('has-errors');
}
